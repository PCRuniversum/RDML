\name{pcrimport.RDML}
\alias{pcrimport.RDML}
\title{
qPCR data import function
}
\description{
Imports qPCR data from RDML v1.1 format files and transforms it to the appropriate format of the 'qPCR' package. Data can be imported to the one table format (flat) or list of tables spited by PCR targets and samples types (see 'Details). Tables consist of 'Cycles' in the first column and fluorescence data of the samples in the remaining columns for qPCR data. For melting data tables consist of 'Temperature' in the first column and fluorescence data of the samples in the remaining columns. Names of the samples can be formed by patterns (see 'Details').
}
\usage{
pcrimport.RDML(rdmlfile = NA, name.pattern = "\%NAME\%__\%ID\%", flat.table = FALSE)
}
\arguments{
  \item{rdmlfile}{
RDML file with qPCR data.
}
  \item{name.pattern}{
  sample name pattern (see 'Details').
  }
  \item{flat.table}{
  logical. If \code{TRUE}, a result table is not spited by PCR targets and samples types.
  }
  \item{omit.ntp}{
  logical. If \code{TRUE}, samples with 'ntp' type (mark for empty sample in data files generated by \emph{LightCycler 96} software) are omitted.
  }
}
\details{
\bold{ATTENTION}: Although the format RDML claimed as data exchange format, the specific implementation of the format at devices from different manufacturers differ significantly. Currently this function is checked against data from devices: \emph{Bio Rad CFX96} and \emph{Roche LightCycler 96}.\cr

This function has been designed to import qPCR data from instruments that support RDML v1.1 format export . Output from this function can be easily used with 'qpcR' package.\cr
There are two general variants of output for this function:
\itemize{
  \item{simplified (\code{flat.table = TRUE}).
  Represents three elements \code{list}: \code{vector} of named dilutions -- 'Dilutions', \code{data.frame} with qPCR fluorescence data of \bold{all} samples -- 'qPCR' and \code{data.frame} with melting fluorescence data of \bold{all} samples -- 'Melt'.}
  \item{splitted (\code{flat.table = FALSE}).
  Represents three elements \code{list}: \code{vector} of named dilutions -- 'Dilutions', \code{list} of \code{data.frames} which contain qPCR fluorescence data of samples spited by targets and then by types -- 'qPCR' and \code{list} of \code{data.frames} which contain melting fluorescence data of samples spited by targets and then by types -- 'Melt'}  
  }
Names of the samples can be generated by rules described in \code{name.pattern}. For example, if \code{name.pattern = "\%NAME\%__\%TUBE\%"}, sample name (inputted in the qPCR software) is "Sample_1", and position on the plate is "A4", then generated sample name will be: "Sample_1__A4".\cr

Possible keys in \code{name.pattern}
\itemize{
\item{\code{\%NAME\%} - name of the sample inputted in the qPCR software (ex.: "Sample 1")}
\item{\code{\%ID\%} - tube ID (ex.: "23")}
\item{\code{\%TUBE\%} - tube name (ex.: "B11")}
\item{\code{\%TARGET\%} - PCR target (ex.: "GAPDH")}
\item{\code{\%TYPE\%} - type of the sample (ex.: "unkn")}
}
}
\value{
A list of \code{data.frame} (or one \code{data.frame}), suitable for analysis with 'qpcR' package. Also output list contains information about dilutions (quantity or concentration) if available.
}
\references{
\link{http://www.rdml.org/}
\link{http://cran.r-project.org/web/packages/qpcR/index.html}
}
\author{
Konstantin A. Blagodatskikh <k-blag@ya.ru>
}
\examples{
## EXAMPLE 1:
## internal dataset lc96_bACTXY.rdml (in 'data' directory)
## generated by Roche LightCycler 96. Contains qPCR data
## with four targets and two types.
## Import with default settings.
PATH<-path.package("pcrimport.RDML")
filename <- paste(PATH, "/data/", "lc96_bACTXY.rdml", sep ="")
lc96 <- pcrimport.RDML(filename)

## Show targets names
names(lc96$qPCR)
## Show types of the samples for target 'FAM@bACT'
names(lc96$qPCR[["FAM@bACT"]])

## Show dilutions for dye - FAM
lc96$Dilutions$FAM
COPIES <- unique(lc96$Dilutions$FAM["quant",])
## Define calibration curves (type of the samples - 'std').
## No replicates.
CAL <- modlist(lc96$qPCR[["FAM@bACT"]]$std,
               fluo = c(2, 4, 6, 8, 10), baseline = 1:15)
## Define samples to predict (type of the samples - 'unkn').
PRED <- modlist(lc96$qPCR[["FAM@bACT"]]$unkn,
                fluo = grep("^S", names(lc96$qPCR[["FAM@bACT"]]$unkn)))
## Conduct quantification.
calib(refcurve = CAL, predcurve = PRED, thresh = "cpD2",
      dil = COPIES)


## EXAMPLE 2:
## internal dataset BioRad_qPCR_melt.rdml (in 'data' directory)
## generated by Bio Rad CFX96. Contains qPCR and melting data.
## Import without spliting by targets/types and with
## custom name pattern.
filename <- paste(PATH, "/data/", "BioRad_qPCR_melt.rdml", sep ="")
cfx96 <- pcrimport.RDML(filename, flat.table=TRUE,
                        name.pattern = "\%TUBE\%_\%NAME\%_\%TYPE\%_\%TARGET\%")
## Show some generated names for samples.
names(cfx96$Melt[2:5])
## Select index numbers of the columns that contain
## samples with dye 'EvaGreen' and have type 'pos'.
cols <- grep("pos_EvaGreen$", names(cfx96$Melt))
## Conduct melting curve analysis.
meltcurve(cfx96$Melt, fluos = cols,
          temps = rep(1, length(cols)))

}
\keyword{IO}
\keyword{file}